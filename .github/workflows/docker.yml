name: Docker Image CI

on:
    push:
        branches: ['main']

jobs:
    build:
        runs-on: ubuntu-latest
        env:
            PORT: 80
            HUSKY: 0
            NODE_ENV: production
            PROTOCOL: http
            HOST: instahost.online
            BASE_URL: http://instahost.online
            CLIENT_URL: http://instahost.online
            MAX_FREE_PROJECT_LIMIT: 5
            PLATFORM_CNAME: cname.instahost.online
            MONGODB_URI: ${{ secrets.MONGODB_URI }}
            JWT_SECRET: ${{ secrets.JWT_SECRET }}
            SMTP_USER: ${{ secrets.SMTP_USER }}
            SMTP_PASS: ${{ secrets.SMTP_PASS }}
            COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
            AWS_REGION: ${{ secrets.AWS_REGION }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
            AWS_S3_BUCKET_BASE_URL: ${{ secrets.AWS_S3_BUCKET_BASE_URL }}
            GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        steps:
            - uses: actions/checkout@v4

            - name: Install client dependencies
              working-directory: ./client
              run: npm ci --production=false

            - name: Build client
              working-directory: ./client
              run: npm run build

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v6
              with:
                  context: .
                  push: true
                  tags: alokskj/instahost:latest

            - name: executing remote ssh commands using password
              uses: appleboy/ssh-action@v1.1.0
              with:
                  host: ${{ secrets.EC2_HOST }}
                  username: ${{ secrets.EC2_USERNAME }}
                  key: ${{ secrets.EC2_KEY }}
                  script: |
                      sudo docker pull alokskj/instahost:latest
                      sudo docker stop instahost
                      sudo docker rm instahost
                      sudo docker run -d --env-file ./.env -p 80:80 --name instahost alokskj/instahost
